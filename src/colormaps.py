"""Contains the custom colormaps generated from https://aaronthenerd.github.io/matplotlib_colormap_generator/

Written by Aaron Barge
Copyright 2022
"""


import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np

from typing import List

CUSTOM_COLORMAPS = [
    mpl.colors.LinearSegmentedColormap("kryptonite",{"red":[(0,0.01176,0.01176),(0.125,0.01176,0.01176),(0.25,0.01176,0.01176),(0.375,0,0),(0.5,0,0),(0.625,0.18824,0.18824),(0.75,0.41961,0.41961),(0.875,0.70588,0.70588),(1,0.88235,0.88235),],"green":[(0,0,0),(0.125,0.27059,0.27059),(0.25,0.51765,0.51765),(0.375,0.6902,0.6902),(0.5,0.80392,0.80392),(0.625,0.89412,0.89412),(0.75,1,1),(0.875,0.99216,0.99216),(1,1,1),],"blue":[(0,0,0),(0.125,0,0),(0.25,0,0),(0.375,0,0),(0.5,0.01961,0.01961),(0.625,0.01176,0.01176),(0.75,0,0),(0.875,0.07843,0.07843),(1,0.50196,0.50196),],"alpha":[(0,1.00784,1.00784),(0.125,1,1),(0.25,1,1),(0.375,1,1),(0.5,1,1),(0.625,1,1),(0.75,1,1),(0.875,1,1),(1,1,1),]},256),
    mpl.colors.LinearSegmentedColormap("strange_rainbow",{"red":[(0,0.04706,0.04706),(0.125,0.28627,0.28627),(0.25,0.99216,0.99216),(0.375,1.00392,1.00392),(0.5,0,0),(0.625,0.01569,0.01569),(0.75,0.25882,0.25882),(0.875,0.68627,0.68627),(1,1,1),],"green":[(0,0.01961,0.01961),(0.125,0.01961,0.01961),(0.25,0.01961,0.01961),(0.375,0.99608,0.99608),(0.5,1.00392,1.00392),(0.625,0.98039,0.98039),(0.75,0.53725,0.53725),(0.875,0.00784,0.00784),(1,0.00784,0.00784),],"blue":[(0,0.01176,0.01176),(0.125,0.01176,0.01176),(0.25,0.00784,0.00784),(0.375,0.00784,0.00784),(0.5,0.01569,0.01569),(0.625,1,1),(0.75,1.00784,1.00784),(0.875,0.99216,0.99216),(1,0.97647,0.97647),],"alpha":[(0,1.00392,1.00392),(0.125,0.98824,0.98824),(0.25,0.99608,0.99608),(0.375,1,1),(0.5,1,1),(0.625,1,1),(0.75,0.9098,0.9098),(0.875,0.96471,0.96471),(1,0.98039,0.98039),]},256),
    mpl.colors.LinearSegmentedColormap("strange_rainbow_rev",{"red":[(0,0.04706,0.04706),(0.125,0.35686,0.35686),(0.25,0.99216,0.99216),(0.375,0.00784,0.00784),(0.5,0,0),(0.625,1,1),(0.75,0.99216,0.99216),(0.875,0.00784,0.00784),(1,0.02745,0.02745),],"green":[(0,0.01961,0.01961),(0.125,0.01961,0.01961),(0.25,0.01961,0.01961),(0.375,0.01176,0.01176),(0.5,1.00392,1.00392),(0.625,0.99216,0.99216),(0.75,0.01961,0.01961),(0.875,0.01961,0.01961),(1,0.01569,0.01569),],"blue":[(0,0.20784,0.20784),(0.125,0.45882,0.45882),(0.25,0.77255,0.77255),(0.375,0.97255,0.97255),(0.5,1,1),(0.625,0.01569,0.01569),(0.75,0.01569,0.01569),(0.875,0.02745,0.02745),(1,0.02353,0.02353),],"alpha":[(0,0.02353,0.02353),(0.125,0.06667,0.06667),(0.25,0.52549,0.52549),(0.375,1,1),(0.5,1,1),(0.625,1,1),(0.75,1.00784,1.00784),(0.875,1,1),(1,0.96471,0.96471),]},256),
    mpl.colors.LinearSegmentedColormap("red",{"red":[(0,0.01176,0.01176),(0.125,0.01961,0.01961),(0.25,0.2902,0.2902),(0.375,0.54118,0.54118),(0.5,0.74118,0.74118),(0.625,0.75686,0.75686),(0.75,0.79216,0.79216),(0.875,1,1),(1,1,1),],"green":[(0,0.01961,0.01961),(0.125,0.01961,0.01961),(0.25,0.01961,0.01961),(0.375,0.01569,0.01569),(0.5,0.01569,0.01569),(0.625,0.01569,0.01569),(0.75,0.01569,0.01569),(0.875,0.00784,0.00784),(1,0.00784,0.00784),],"blue":[(0,0.01176,0.01176),(0.125,0.01176,0.01176),(0.25,0.00784,0.00784),(0.375,0.00784,0.00784),(0.5,0.01569,0.01569),(0.625,0.01961,0.01961),(0.75,0.01176,0.01176),(0.875,0.01176,0.01176),(1,0.04706,0.04706),],"alpha":[(0,1.00392,1.00392),(0.125,0.98824,0.98824),(0.25,0.99608,0.99608),(0.375,1,1),(0.5,1,1),(0.625,0.70196,0.70196),(0.75,0.35294,0.35294),(0.875,0.14118,0.14118),(1,0.01569,0.01569),]},256),
    mpl.colors.LinearSegmentedColormap("one_way_twilight",{"red":[(0,0.01569,0.01569),(0.125,0.01961,0.01961),(0.25,0.12549,0.12549),(0.375,0.31765,0.31765),(0.5,0.7098,0.7098),(0.625,0.98824,0.98824),(0.75,1.00392,1.00392),(0.875,1.00784,1.00784),(1,0.99216,0.99216),],"green":[(0,0.00784,0.00784),(0.125,0,0),(0.25,0,0),(0.375,0,0),(0.5,0,0),(0.625,0.47843,0.47843),(0.75,0.89804,0.89804),(0.875,1.00784,1.00784),(1,1.00392,1.00392),],"blue":[(0,0.01176,0.01176),(0.125,0.16863,0.16863),(0.25,0.3451,0.3451),(0.375,0.37255,0.37255),(0.5,0.23922,0.23922),(0.625,0.30196,0.30196),(0.75,0.68627,0.68627),(0.875,0.98824,0.98824),(1,1.00784,1.00784),],"alpha":[(0,1.00392,1.00392),(0.125,1,1),(0.25,1,1),(0.375,1,1),(0.5,1,1),(0.625,1.00784,1.00784),(0.75,1,1),(0.875,1.00784,1.00784),(1,0.98824,0.98824),]},256),

]


def register_custom_colormaps():
    """Registers all colormaps defined in colomaps.py to matplotlib."""
    for cmap in CUSTOM_COLORMAPS:
        mpl.colormaps.register(cmap)


def plot_color_gradients(cmap_list: List[mpl.colors.Colormap]):
    """Displays all custom colormaps."""
    gradient = np.linspace(0, 1, 256)
    gradient = np.vstack((gradient, gradient))
    # Create figure and adjust figure height to number of colormaps
    nrows = len(cmap_list)
    figh = 0.35 + 0.15 + (nrows + (nrows - 1) * 0.1) * 0.22
    fig, axs = plt.subplots(nrows=nrows + 1, figsize=(6.4, figh))
    fig.subplots_adjust(top=1 - 0.35 / figh, bottom=0.15 / figh,
                        left=0.2, right=0.99)
    axs[0].set_title('Custom colormaps', fontsize=14)

    for ax, cmap in zip(axs, cmap_list):
        ax.imshow(gradient, aspect='auto', cmap=cmap)
        ax.text(-0.01, 0.5, cmap.name, va='center', ha='right', fontsize=10,
                transform=ax.transAxes)

    # Turn off *all* ticks & spines, not just the ones with colormaps.
    for ax in axs:
        ax.set_axis_off()

    plt.show()


if __name__ == "__main__":
    plot_color_gradients(CUSTOM_COLORMAPS)
